//Muhammad WAjid Ali//


#include<iostream>  
#include<algorithm>
#include<vector>
template<class it>
long long compute_product(it start, size_t numeric) {
	long long product =1;
	for(int i= 0;i<'numric';i++)
	product *= *start++;
	return product;
}
long long largest_product(std::vector<int> const&in, int digits){
	size_t max_pos = in.size()-digits + 1;
	long long largest =0;
	for (int i= 0;i<max_pos;i++) {
		long long product = compute_product(&in[i], digits);
		largest = std::max(largest, product);
	}
	return largest;
}
int main(){
	std::vector<int>numbs = {
    7316717653133062491922511967442657474235534919493496983503127745032623957831801698480186947885184385861560789112949495459501737958331952853208805511125406987471585238630557156932909632952274430435576689664895044524452316173185640309871112172238113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172242712188399879790879227492190169972088809377665727330010533678812202354218097512545405947522435258490771167055601360483958644670362441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664585391245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403580962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269651882670428252483600823257530420752963450
	};
	static const int digit = 13;
	auto largest = largest_product(numbs,digits);
	std::cout <<"the largest product is: " <<largest <<"\n";
}
